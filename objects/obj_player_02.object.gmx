<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fidel_nada</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIAL VARIABLES

if(instance_exists(obj_system))
{
    vida = obj_system.vida;
}
else
{
    vida = 3;
}
name = "FIDEL";
can_win = true;

//special variables
is_special = false;
tank_speed = 10;
acce = 0.8;
desacce = 0.6;
special_time = 10; //max time being a tank
special_hit  = 3;  //max hit to destroy the tank
special_hit_control = special_hit;
special_control = 0; //if its 3 is_special is true
plus_special = 0.4; //added to control when its not on special mode
time_plus_special = 2; //every x second it add the plus value

//sprite list
//tank sprites
spr_idle    = spr_tanque_idle;
spr_attack  = spr_tanque_attack;
spr_victory = spr_tanque_attack;
spr_walk    = spr_tanque_move;
spr_lose    = spr_tanque_idle;
spr_damage  = spr_tanque_dano;
spr_create  = spr_tanque_crear;
spr_destroy = spr_tanque_destroy;

//normal sprites
spr_idle    = spr_fidel_normal;
spr_attack  = spr_fidel_ataque;
spr_victory = spr_fidel_ataque;
spr_walk    = spr_fidel_caminando;
spr_lose    = spr_fidel_pierde;
spr_damage  = spr_fidel_danno;

//initial sprite
sprite_index = spr_idle;
 
//movement
normal_speed  = 5;
move_speed  = normal_speed;
dir         = 0;
last_dir    = 0;
hsp         = 0.0;

//control
can_move = true;
can_attack = true;
can_hurt = false;
time_attack = 1; //seconds
time_move = 0.5;
time_hurt = 0.6;

acc = gp_face1;
show_debug_message(acc);

target = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///IS NOT SPECIAL ANYMORE
is_special = false;
special_hit_control = special_hit;
sprite_index = spr_destroy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL CONTROL INCREASE
special_control += plus_special;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAN MOVE = TRUE
can_move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAN ATTACK = TRUE
can_attack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGE INPUT

if(is_first)
{
/*
    lft = gp_padl;
    rgt = gp_padr;
    acc = gp_face3;
    spe = gp_face2;
*/
    lft = 0;
    rgt = 0;
    if(gamepad_axis_value(0, gp_axislh) &gt; 0.3 || gamepad_axis_value(0, gp_axislh) &lt; -0.3)
    {
        dir = sign(gamepad_axis_value(0, gp_axislh));
    }
    else
    {
        dir = 0;
    }
    acc = gamepad_button_check_pressed(0, gp_face1);
    spe = gamepad_button_check_pressed(0, gp_face3);

}
else
{
    lft = 0;
    rgt = 0;
    if(gamepad_axis_value(1, gp_axislh) &gt; 0.2 || gamepad_axis_value(1, gp_axislh) &lt; -0.2)
    {
        dir = sign(gamepad_axis_value(1, gp_axislh));
    }
    else
    {
        dir = 0;
    }
    acc = gamepad_button_check_pressed(1, gp_face1);
    spe = gamepad_button_check_pressed(1, gp_face3);
/*
    lft = ord("J");
    rgt = ord("L");
    acc = ord("I");
    spe = ord("O");
*/
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VIDA

if(vida &lt;= 0){
    sprite_index = spr_lose;
    can_move = false;
    can_attack = false;
    if(instance_exists(obj_system.player_01)){
        obj_system.player_01.can_move = false;
        obj_system.player_01.can_attack = false;
        obj_system.player_01.sprite_index = obj_system.player_01.spr_victory;
    }
    if(can_win){
        global.victories_01 ++;
        can_win = false;
    }
    obj_system.end_level = true;
    obj_system.winner_name = obj_system.player_01.name;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGE SPRITE DIRECTION
if(dir &gt; 0.3) image_xscale = -1;
else if(dir &lt; -0.3) image_xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION CONTROL

//animation list
if(is_special)
{
    spr_idle    = spr_tanque_idle;
    spr_attack  = spr_tanque_attack;
    spr_victory = spr_tanque_attack;
    spr_walk    = spr_tanque_move;
    spr_lose    = spr_tanque_idle;
    spr_damage  = spr_tanque_dano;
}
else
{
    spr_idle    = spr_fidel_normal;
    spr_attack  = spr_fidel_ataque;
    spr_victory = spr_fidel_ataque;
    spr_walk    = spr_fidel_caminando;
    spr_lose    = spr_fidel_pierde;
    spr_damage  = spr_fidel_danno;
}

//animation speed
switch(sprite_index)
{
    case spr_idle: 
        image_speed = 0.06;
    break;
    case spr_attack:
        image_speed = 0.05;
    break;
    case spr_walk:
        image_speed = 0.1;
    break;
    case spr_create:
        image_speed = 0.3;
    break;
    case spr_destroy:
        image_speed = 0.3;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLAMPING 
x = clamp(x,obj_system.x_min_boundary, obj_system.x_max_boundary);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL CONTROL
special_control = clamp(special_control, 0, 3);
var special_key = keyboard_check_pressed(spe);
if(spe == 1 &amp;&amp; special_control == 3)
{
    is_special = true;
    special_control = 0;
    sprite_index = spr_create;
    if(!audio_is_playing(sfx_tanque_crear))
    {
        audio_play_sound(sfx_tanque_crear,10,false);
    }
    can_move = false;
}
if(is_special)
{
    if(alarm[3] = -1)
    {
        alarm[3] = special_time * room_speed;
    }
    if(special_hit_control &lt;= 0)
    {
        is_special = false;
        sprite_index = spr_destroy;
        alarm[3] = -1;
        alarm[2] = -1;
    }
}
else
{
    if(alarm[2] = -1)
    {
        alarm[2] = time_plus_special * room_speed;
    }
    special_hit_control = special_hit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOVEMENT
if(!can_move) exit;

/*
left_key = -keyboard_check(lft);
right_key = keyboard_check(rgt);

dir = left_key + right_key;
*/

if(dir != 0) {
    last_dir = dir;
}

//special velcity changes
if(!is_special)
{
    move_speed = normal_speed;
    hsp = dir * move_speed;
}
else{   
    if(dir != 0){
        hsp += dir * acce;
    }
    else
    {
        hsp -= last_dir * desacce;    
    }
    if(last_dir == 1)
    {
        hsp = max(0.000,hsp);
    }
    else
    {
        hsp = min(0.000,hsp);
    }
    hsp = clamp(hsp,-tank_speed,tank_speed);
    
}
show_debug_message("direction Fidel = " + string(dir));

/*//HORIZONTAL COLLISION
if(place_meeting(x + hsp,y, obj_wall)){
    while(!place_meeting(x + sign(hsp),y, obj_wall)){
        x += sign(hsp);
    }
    hsp = 0;   
}*/
x += hsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ACTION INPUT
/*
action_key = keyboard_check_pressed(acc);

if(action_key)
{
    show_debug_message("ACTION PS3 is PREssed");
}
*/
if(acc &amp;&amp; can_attack){
    if(is_special)
    {
        alarm[0]    = (time_attack/2) * room_speed;
        alarm[1]    = (time_move/2) * room_speed;
        if(!audio_is_playing(sfx_shooting_tank) &amp;&amp; !audio_is_playing(sfx_tanque_crear))
        {
            audio_play_sound(sfx_shooting_tank,9,false);
        }
    }
    alarm[0]    = time_attack * room_speed;
    alarm[1]    = time_move * room_speed;
    can_attack  = false;
    can_move    = false;
    sprite_index = spr_attack;
}else if(dir != 0 &amp;&amp; can_move == true){
    sprite_index = spr_walk;
}
else{
    sprite_index = spr_idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_blink">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LESS LIFE
with(other){
    instance_destroy();
}
if(is_special)
{
    special_hit_control --;
    show_debug_message("player 02: Special Hit points = " + string(special_hit_control));
}
else
{
    special_control ++;
}
vida --;
can_move = false;
sprite_index = spr_damage;
alarm[1] = time_hurt * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tnt">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESTROY TNT
if(!place_meeting(other.x,other.y, obj_wall))
{
    if(sprite_index == spr_attack &amp;&amp; obj_piso.can_destroy == true){
        var inst = instance_place(x,y,obj_piso);
    
        with(other)instance_destroy();
        with(inst){
            bombs_number --;
            if(bombs_number &lt;2){
                instance_destroy();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESTROY WALL

if(sprite_index == spr_attack){
    show_debug_message("ataca");
    with(other)
    {
        if(can_hit == true)
        {
            if(obj_system.player_02.is_special)
            {
                hit_points-= 2;
            }
            else
            {
                hit_points--;
            }
            alarm[1] = time_hit * room_speed;
            can_hit = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_create)
{
    can_move = true;
    can_attack = true;
    sprite_index = spr_idle;
}
if(sprite_index == spr_destroy)
{
    sprite_index = spr_idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
