<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///USEFULL STUFFS
global.rounds = 1;
global.victories_01 = 0;
global.victories_02 = 0;
winner_name = "";
end_level = false;
vida = 7;

player_01 = noone;
player_02 = noone;
//it changes the input
//of second character to the first one
p2_is_first = false;

first_floor = noone;

//level bondaries
x_min_boundary = 568;
x_max_boundary = 1147;
//y_min_boundary = 100;
//y_max_boundary = 1250;

//tnt position
tnt_x_pos[0] = (sprite_get_width(spr_piso)/2) + sprite_get_bbox_left(spr_piso);
tnt_x_pos[1] = (sprite_get_width(spr_piso)/4) + (sprite_get_bbox_left(spr_piso));
tnt_x_pos[2] = (sprite_get_width(spr_piso)/8) + (sprite_get_bbox_left(spr_piso));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EXIT GAME
if(gamepad_button_check_released(0, gp_select))
{
    room_goto(rm_INICIO);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(end_level &amp;&amp; gamepad_button_check_released(0,gp_start))
    {
        if(global.victories_01 &gt;= 2 || global.victories_02 &gt;= 2)
        {
            room_goto(rm_CREDITS);
            end_level = false;
        }
        else
        {
            if(room_exists(room_next(room)))
            {
                if(room_next(room) == rm_level_3)
                {
                    vida = 5;
                }
                else
                {
                    vida = 7;
                }
                first_floor = noone;
                room_goto(room_next(room));
                global.rounds ++;
                end_level = false;
            }
        }
    }
    else if(gamepad_button_check_released(0,gp_start))
    {
        end_level = false;
         room_restart();
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambiar de Habitacion (DEBUG)

if(keyboard_check_pressed(vk_enter))
{
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHARACTERS CREATOR
if(room == rm_level_1_2 || room == rm_level_2 || room == rm_level_3 || room = room_prueba)
{
    var x_start;
    var y_start_01; //top player
    var y_start_02; //down player

    if(!view_enabled)
    {
        x_start     = room_width/2;
        y_start_01  = 100;
        y_start_02  = room_height-150;
    }
    else
    {
        x_start     = view_xview[0] + (view_wview[0]/2);
        y_start_01  = view_yview[0] - 150;
        if(room == rm_level_3)
        {
            x_min_boundary = 459;
            x_max_boundary = 1038;
            y_start_02  = view_yview[0] + (view_hview[0] - 180);
        }
        else
        {
            y_start_02  = view_yview[0] + (view_hview[0] - 233);
        }
    }
    var player_1   = instance_create(x_start, y_start_01, player_01);
    var player_2   = instance_create(x_start, y_start_02, player_02);
    if(p2_is_first)
    {
        with(player_2)
        {
            is_first = true;
        } 
        with(player_1)
        {
            is_first = true;
        } 
    }
    else
    {
        with(player_2)
        {
            is_first = false;
        } 
        with(player_1)
        {
            is_first = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
