<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_piso_def</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIAL VARIABLES
/*
bomb[0] = instance_create(x + obj_system.tnt_x_pos[0],y,obj_tnt);
bomb[1] = instance_create(x - obj_system.tnt_x_pos[0],y,obj_tnt);
bomb[2] = instance_create(x ,y,obj_tnt);
bomb[3] = instance_create(x + obj_system.tnt_x_pos[1],y,obj_tnt);
bomb[4] = instance_create(x - obj_system.tnt_x_pos[1],y,obj_tnt);
*/

vsp = 0;
grav = 0.8;
can_create = true;
can_destroy = true;
destroy_time = 2;
bombs_number = 3;

bomb = 0;    

ref_pts = 0;

//variable to set the first target to Fidel's IA
can_target = true; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESTRUIMOS EL PISO

for(var i = 0; i&lt;array_length_1d(bomb) i++){
    with(bomb[i]){
        instance_destroy();
    }
    with(obj_piso){
        vsp = 5;
    }
    ref_pts = 0;
}
if(instance_exists(obj_system.player_01)){
    obj_system.player_01.vida --;
    obj_system.player_01.special ++;
}
//obj_player_01.special ++;

obj_system.first_floor = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DETERMINATE FIRST TARGET FOR FIDEL
with(obj_system.player_02)
{
    var tnts = obj_system.first_floor.bomb;
    target = Determinate_target(tnts);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_destroy = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GRAVITY AND COLLISION

if(place_meeting(x,y + vsp, obj_coll)){
    while(!place_meeting(x,y + sign(vsp), obj_coll)){
        y += sign(vsp);
    }
    vsp = 0;   
    obj_system.first_floor = self.id;
    if(obj_system.player_02 == obj_fidel_IA &amp;&amp; can_target)
    {
        alarm[1] = 0.5 * room_speed;
        can_target = false;
    }
}else if(place_meeting(x,y + vsp, obj_piso)){
    while(!place_meeting(x,y + sign(vsp), obj_piso)){
        y += sign(vsp);
    }
    vsp = 0;   
} else{
    vsp += grav;
    if(can_destroy){
        alarm[0] = destroy_time * room_speed;
        can_destroy = false;
    }  
}

y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///POINTS TO CREATE A WALL
if(obj_system.first_floor == self.id)
{
    control = 1;
    for(var i = 0; i&lt;5; i++){
        if(i &lt; 2){
            ref_pts[i] = x + (obj_system.tnt_x_pos[0]) * control;
            control = -1;           
        }else if(i&gt;2){
            ref_pts[i] = x + (obj_system.tnt_x_pos[1]) * control;
            control = -1
        }else{
            ref_pts[i] = x
            control = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TNT CREATOR

if(!can_create) exit;
if(bombs_number &gt;1){
    control = 1;
    for(var i = 0; i&lt;bombs_number; i++){
        if(i &lt; 2){
            bomb[i] = instance_create(x + (obj_system.tnt_x_pos[0]) * control,y,obj_tnt);
            control = -1;
            bomb[i].padre = self.id;            
        }else if(i&gt;2){
            bomb[i] = instance_create(x + (obj_system.tnt_x_pos[1]) * control,y,obj_tnt);
            bomb[i].padre = self.id;
            control = -1
        }else{
            bomb[i] = instance_create(x ,y,obj_tnt);
            control = 1;
            bomb[i].padre = self.id;
        }
    }
} else if(bombs_number == 1){
    bomb[0] = instance_create(x ,y,obj_tnt);
    bomb[i].padre = self.id;
}else{
    show_error("el numero minimo de bombas es 1", true);
}
can_create = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
