<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trump_nada</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIAL VARIABLES

name = "TRUMP";
can_win = true;

//movement
move_speed  = 8;
grav        = 0.6;
hsp         = 0;
vsp         = 0;

vida = obj_system.vida;

//special ability
special = 0;
plus_special = 0.4;
special_time = 2;

//sfx list
sfx_action[0] = sfx_trump_action_1;
sfx_action[1] = sfx_trump_action_2;
sfx_action[2] = sfx_trump_action_3;
sfx_action[3] = sfx_trump_action_4;
sfx_action[4] = sfx_great_wall;

//sprite list
spr_idle    = spr_trump_normal;
spr_attack  = spr_trump_ataque;
spr_victory = spr_trump_victory;
spr_lose    = spr_trump_pierde;

sprite_index = spr_idle;

//control and IA
can_move        = false;
can_shoot       = false;
can_targeting   = true;
time_target     = 3;
enemy           = obj_system.player_02;
shooting_offset = sprite_get_yoffset(spr_player_01);
distance_to_floor = 0;
time_to_floor_fps = 0;
time_to_floor_sec = 0;
time_shoot        = 1;
//move = false;
ene_pos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///can_targeting = true;
can_targeting = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL INCREACE
special += plus_special;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION SPEED CONTROL
//if(!can_shoot){
//    sprite_index = spr_idle;
//}

if(can_move){
    sprite_index = spr_idle;
}
switch(sprite_index){
    case spr_idle: 
        image_speed = 0.06;
    break;
    case spr_attack: 
        image_speed = 0.06;
    break;
    case spr_lose:
        image_speed = 0.04;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VIDA

if(vida &lt;= 0){
    sprite_index = spr_lose;
    can_move = true;
    can_attack = false;
    grav = 0.3;
    obj_system.player_02.can_move = false;
    obj_system.player_02.can_attack = false;
    obj_system.player_02.sprite_index = obj_system.player_02.spr_lose;
    if(can_win){
        global.victories_02 ++;
        can_win = false;
    }
//    show_debug_message("global.victories_02 = " + string(global.victories_02));
   
    
    obj_system.end_level = true;
    obj_system.winner_name = obj_system.player_02.name;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var bombs;
if(obj_system.first_floor != noone){
    bombs = obj_system.first_floor.bomb;
    //if(can_targeting){
        var target = Determinate_target(bombs, enemy);
        obj_tnt.image_blend = -1;
        with(target){
            image_blend = c_green;
        }
       // alarm[2] = time_target * room_speed;
    //}
    //can_targeting = false;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL ABILITY
special = clamp(special,0.0,3.0);
if(alarm[0] = -1)
{
    alarm[0] = special_time * room_speed;
}
if(special == 3)
{
    instance_create(x, y - shooting_offset, obj_wall_create);
    if(!audio_is_playing(sfx_action[4]))
    {
        audio_play_sound(sfx_action[4], 10, false);
    }
    special = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLAMPING 
x = clamp(x,obj_system.x_min_boundary, obj_system.x_max_boundary);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VERTICAL COLLISION
if(vida &lt;= 0){
    sprite_index = spr_lose;
    exit;
}


if(place_meeting(x,y + vsp, obj_piso)){
    while(!place_meeting(x,y + sign(vsp), obj_piso)){
        y += sign(vsp);
        var distance_to_floor = abs(obj_coll.y - (y - shooting_offset));
        time_to_floor_fps = Distance_to_time(distance_to_floor, false);
        time_to_floor_sec = Distance_to_time(distance_to_floor, true);
        can_move    = true;
        can_shoot   = true;
    }
    can_move    = true;
    vsp = 0;   
} else{
    vsp += grav;
}

y += vsp;
x += hsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ATTACKIN &amp; MOVEMENT

ene_pos = enemy.x + (time_to_floor_fps * enemy.hsp);
ene_pos = clamp(ene_pos, obj_system.x_min_boundary, obj_system.x_max_boundary);
if(can_move)
{
    if(distance_to_point(ene_pos,y) &gt; 2)
    {
        x += sign(ene_pos - x) * move_speed;
    }
    else if(can_shoot)
    {
        can_move    = false;
        sprite_index = spr_attack;
        //alarm[0] = time_shoot * room_speed;
        //can_shoot = false;        
    }
}

//show_debug_message("distancia pos enemigo = " + string(distance_to_point(ene_pos, y)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_attack){
    var bullet = instance_create(x,y-shooting_offset, obj_blink);
    if(!audio_is_playing(sfx_action[0])&amp;&amp; !audio_is_playing(sfx_action[1]) &amp;&amp; !audio_is_playing(sfx_action[2]) &amp;&amp; !audio_is_playing(sfx_action[3]))
    {
        randomize()
        var n = irandom(3);
        audio_play_sound(sfx_action[n], 8, false);
    }
    can_move = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
