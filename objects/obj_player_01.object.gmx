<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trump_nada</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIAL VARIABLES

if(instance_exists(obj_system)){
    vida = obj_system.vida;
}else{
    vida = 3;
}
name = "TRUMP";
can_win = true;

//sfx list
sfx_action[0] = sfx_trump_action_1;
sfx_action[1] = sfx_trump_action_2;
sfx_action[2] = sfx_trump_action_3;
sfx_action[3] = sfx_trump_action_4;
sfx_action[4] = sfx_great_wall;
//sprite list
spr_idle    = spr_trump_normal;
spr_attack  = spr_trump_ataque;
spr_victory = spr_trump_victory;
spr_lose    = spr_trump_pierde;

sprite_index = spr_idle;
 
//movement
move_speed  = 7;
dir         = 0;
vsp         = 0.0;
hsp         = 0.0;
grav        = 0.6;

//special ability
special = 0;
plus_special = 0.4;
special_time = 2;

//control
can_move = true;
can_shoot = true;
shooting_time = 1; //seconds
can_move_time = 0.5;
shooting_offset = sprite_yoffset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL INCREACE
special += plus_special;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAN MOVE = TRUE
can_move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAN SHOOT = TRUE
can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION SPEED CONTROL
if(!can_shoot){
    sprite_index = spr_idle;
}
switch(sprite_index){
    case spr_idle: 
        image_speed = 0.06;
    break;
    case spr_attack: 
        image_speed = 0.06;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VIDA

if(vida &lt;= 0){
    sprite_index = spr_lose;
    can_move = true;
    can_attack = false;
    grav = 0.3;
    obj_system.player_02.can_move = false;
    obj_system.player_02.can_attack = false;
    obj_system.player_02.sprite_index = obj_system.player_02.spr_lose;
    if(can_win){
        global.victories_02 ++;
        can_win = false;
    }
    show_debug_message("global.victories_02 = " + string(global.victories_02));
   
    
    obj_system.end_level = true;
    obj_system.winner_name = obj_system.player_02.name;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGE SPRITE DIRECTION
if(dir &gt; 0.3) image_xscale = -1;
else if(dir &lt; -0.3) image_xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGE INPUT
if(is_first)
{
/*
    lft = gp_padl;
    rgt = gp_padr;
    acc = gp_face3;
    spe = gp_face2;
*/
    lft = 0;
    rgt = 0;
    if(gamepad_axis_value(0, gp_axislh) &gt; 0.2 || gamepad_axis_value(0, gp_axislh) &lt; -0.2)
    {
        dir = gamepad_axis_value(0, gp_axislh);
    }
    else
    {
        dir = 0;
    }
    acc = gamepad_button_check_pressed(0, gp_face1);
    spe = gamepad_button_check_pressed(0, gp_face3);

}
else
{
/*
    lft = ord("J");
    rgt = ord("L");
    acc = ord("I");
    spe = ord("O");
*/

    lft = 0;
    rgt = 0;
    if(gamepad_axis_value(1, gp_axislh) &gt; 0.2 || gamepad_axis_value(1, gp_axislh) &lt; -0.2)
    {
        dir = gamepad_axis_value(1, gp_axislh);
    }
    else
    {
        dir = 0;
    }
    acc = gamepad_button_check_pressed(1, gp_face1);
    spe = gamepad_button_check_pressed(1, gp_face3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLAMPING 
if(instance_exists(obj_system))
{
    x = clamp(x,obj_system.x_min_boundary, obj_system.x_max_boundary);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOOTING
//action_key = keyboard_check_pressed(ord("W"));
if(acc == 1)
{
    if(can_shoot)
    {
        var random_sfx = choose(0,1,2,3);
        sprite_index = spr_attack;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPECIAL ABILITY
special = clamp(special,0.0,3.0);
if(alarm[2] = -1)
{
    alarm[2] = special_time * room_speed;
}

//var special_key = keyboard_check_pressed(ord("E"));
//if(special_key &amp;&amp; special == 3)
if(spe == 1 &amp;&amp; special == 3)
{
    var  wall = instance_create(x, y - shooting_offset, obj_wall_create);
    if(!audio_is_playing(sfx_action[4]))
    {
        audio_play_sound(sfx_action[4], 10, false);
    }
    special = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOVEMENT
if(!can_move) exit;

/*
left_key = -keyboard_check(ord("A"));
right_key = keyboard_check(ord("D"));


dir = left_key + right_key;
*/
hsp = dir * move_speed;

//VERTICAL COLLISION
if(place_meeting(x,y + vsp, obj_piso)){
    while(!place_meeting(x,y + sign(vsp), obj_piso)){
        y += sign(vsp);
    }
    vsp = 0;   
} else{
    vsp += grav;
}

y += vsp;
x += hsp;
//show_debug_message("x = " + string(x) + ", y = " + string(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_attack){
    var  blink = instance_create(x,y - shooting_offset,obj_blink);
    /*
    with(blink){
        motion_set(270,blink_speed);
    }
    */
    if(!audio_is_playing(sfx_action[0])&amp;&amp; !audio_is_playing(sfx_action[1]) &amp;&amp; !audio_is_playing(sfx_action[2]) &amp;&amp; !audio_is_playing(sfx_action[3]))
    {
        randomize()
        var n = irandom(3);
        audio_play_sound(sfx_action[n], 8, false);
    }
    can_shoot = false;
    can_move = false;
    alarm[0] = shooting_time * room_speed;
    alarm[1] = can_move_time * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
